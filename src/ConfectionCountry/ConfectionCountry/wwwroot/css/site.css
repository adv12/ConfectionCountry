@import url('open-iconic/font/css/open-iconic-bootstrap.min.css');

html, body {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

app {
    position: relative;
    display: flex;
    flex-direction: column;
}

.top-row {
    flex: none;
    display: flex;
    justify-content: center;
}

.main {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.content {
    flex: 1;
    padding-top: 1.1rem;
}

h1 {
    text-align: center;
}

.setupGrid {
    margin-top: 16px;
    margin-bottom: 16px;
    display: grid;
    align-items: center;
    grid-gap: 16px;
    grid-template-columns: max-content max-content max-content;
}

    .setupGrid.canDelete .removePlayerButton {
        visibility: hidden;
    }

.buttonStack > button {
    margin-top: 16px;
    margin-right: 16px;
}

.gameUI {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    overflow-x: hidden;
    overflow-y: hidden;
}

.boardContainerContainer {
    flex: 1;
    overflow-x: hidden;
    overflow-y: auto;
    display: block;
    width: 432px;
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.boardContainer {
    margin: 0 auto;
    padding-top: 100%; /* Padding is based on width.  Set up a 1:1 aspect ratio for the board */
    height: 0;
    position: relative;
    overflow-x: hidden;
    overflow-y: visible;
}

.board {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: grid;
    grid-template-columns: repeat(12, calc((100% + 4px) / 12.0 - 4px));
    grid-template-rows: repeat(12, calc((100% + 4px) / 12.0 - 4px));
    grid-gap: 4px;
}

.nextPlayer {
    flex: none;
    display: block;
    margin: 16px auto;
}

.nextPlayer > * {
    text-align: center;
    padding: 10px;
    border-radius: 5px;
}

.bottomRow {
    flex: initial;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    overflow-x: hidden;
    overflow-y: hidden;
    padding: 8px;
}

.cardPileContainerContainer {
    flex: initial;
    display: block;
    width: 200px;
    max-width: calc((100% - (3 * 16px)) / 2);
    overflow-x: hidden;
    overflow-y: hidden;
    margin: 8px;
}

.cardPileContainer {
    padding-top: 65%; /* Padding is based on width.  Set up a 1:0.65 aspect ratio for the card piles. */
    height: 0;
    position: relative;
    overflow-x: hidden;
    overflow-y: hidden;
}

.cardPile {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    padding: 0;
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
}

.cardPile.btn.btn-outline-primary:hover {
    background-color: unset;
    color: var(--blue);
}

.cardSquareContainerContainer {
    flex: initial;
    display: block;
    width: 45%; /* size of square when only one present */
    overflow-x: hidden;
    overflow-y: hidden;
    margin: 2.25%
}

.cardSquareContainerContainer.double {
    width: 41%; /* size of square when two present */
}

.cardSquareContainer {
    padding-top: 100%; /* Padding is based on width.  Set up a 1:1 aspect ratio. */
    height: 0;
    position: relative;
    overflow-x: hidden;
    overflow-y: hidden;
}

.cardSquare {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: block;
    border-radius: 8%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: large;
    font-weight: bold;
    padding: 4px;
}

#drawButtonText {
    padding: 5%;
}

.doNotDisturb {
    pointer-events: none;
}

.space {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 2px;
    font-weight: bold;
}

.player {
    width: 50%;
    height: 50%;
    position: absolute;
    margin: auto;
    border-radius: 50%;
    border: 2px solid white;
}

.red {
    background-color: var(--red);
    color: white;
}

.orange {
    background-color: var(--orange);
    color: white;
}

.yellow {
    background-color: var(--yellow);
    color: white;
}

.green {
    background-color: var(--green);
    color: white;
}

.blue {
    background-color: var(--blue);
    color: white;
}

.purple {
    background-color: var(--purple);
    color: white;
}

.pink {
    background-color: var(--pink);
    color: white;
}

@media (max-width: 480px) and (min-aspect-ratio: 1 / 2) {
    .top-row {
        display: none;
    }
}

@media (max-height: 700px) and (min-aspect-ratio: 1 / 2) {
    .top-row {
        display: none;
    }
}